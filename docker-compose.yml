services:
  backend:
    image: ankit998/back_img
    container_name: chat_backend
    ports:
      - "3000:3000"
    depends_on:
      - mongo
    env_file:
      - ./Backend/.env
    restart: always
    networks:
      - my_custom_network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    command: npm start

  frontend:
    image: ankit998/front_img
    container_name: chat_frontend
    ports:
      - "5173:5173"
    depends_on:
      - backend
    networks:
      - my_custom_network
    environment:
      - VITE_BACKEND_URL=http://backend:3000
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5173" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  mongo:
    image: mongo:latest
    container_name: mongo_db
    ports:
      - "27017:27017"
    networks:
      - my_custom_network
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongo_data:/data/db

  nginx:
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    container_name: nginx_container
    networks:
      - my_custom_network
    ports:
      - "80:80" 
      - "443:443"
    volumes:
      - ./nginx_log:/var/log/nginx
      - ./nginx/certs:/etc/nginx/certs
      #  - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      #  - ./frontend/dist:/usr/share/nginx/html

    depends_on:
      - backend
    restart: always
  

volumes:
  mongo_data:
    driver: local

networks:
 my_custom_network:
   driver: bridge

